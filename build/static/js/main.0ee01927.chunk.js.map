{"version":3,"sources":["components/Navbar.js","components/LoginForm.js","components/RegisterForm.js","pages/Home.js","pages/Login.js","pages/sales/Index.js","pages/sales/Show.js","pages/sales/Create.js","pages/sales/Edit.js","pages/PageNotFound.js","App.js","index.js"],"names":["Navbar","props","logoutButton","loginButton","navigate","useNavigate","authenticated","Button","onClick","onAuthenticated","replace","color","AppBar","position","Toolbar","IconButton","size","edge","sx","mr","Typography","variant","component","flexGrow","LoginForm","useState","form","setForm","handleForm","e","prevState","target","name","value","console","log","Card","maxWidth","style","backgroundColor","Container","CardHeader","title","className","TextField","label","type","onChange","axios","post","email","password","then","response","data","auth_token","catch","err","float","RegisterForm","Home","Grid","container","spacing","xs","Login","Index","sales","setSales","loaded","setLoaded","useEffect","get","prev","error","salesList","map","sale","to","_id","saleDate","storeLocation","purchaseMethod","Grow","in","transformOrigin","timeout","Paper","width","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","Show","useParams","setSale","token","localStorage","getItem","ExpandMore","styled","expand","other","theme","transform","marginLeft","transition","transitions","create","duration","shortest","expanded","setExpanded","Item","tagList","item","tags","tag","price","$numberDecimal","quantity","itemsList","items","Slide","direction","mountOnEnter","unmountOnExit","delete","headers","startIcon","CardContent","paragraph","customer","gender","age","satisfaction","CardActions","disableSpacing","Collapse","Create","electronics","school","office","stationary","general","organization","writing","travel","kids","state","setState","checked","id","InputLabelProps","shrink","FormControl","fullWidth","InputLabel","Select","labelId","MenuItem","FormLabel","FormGroup","FormControlLabel","control","Checkbox","Edit","moment","format","Loading","CircularProgress","put","PageNotFound","location","useLocation","pathname","App","protectedSales","setAuthenticated","auth","setItem","removeItem","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ee01927.chunk.js","sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport * as React from 'react';\n// import { styled, alpha } from '@mui/material/styles';\n// import AppBar from '@mui/material/AppBar';\nimport { AppBar, Toolbar, IconButton, Typography, Button } from '@mui/material'\nimport MenuIcon from '@mui/icons-material/Menu';\n// import InputBase from '@mui/material/InputBase';\n// import SearchIcon from '@mui/icons-material/Search';\n\nconst Navbar = props => {\n\n  let navigate = useNavigate()\n  let logoutButton;\n  let loginButton;\n  // let registerButton;\n\n  const logout = () => {\n    props.onAuthenticated(false)\n    navigate('/', { replace: true})\n  }\n\n  //This is used for the button onClick, when the user clicks these buttons they are redircted\n  const home = () => {\n    navigate('/')\n  }\n\n  const sales = () => {\n    navigate('/sales')\n  }\n\n  const login = () => {\n    navigate('/login')\n  }\n\n  // const register = () => {\n  //   navigate('/register')\n  // }\n\n  //If the user is logged in they can see the logout button, if they are not they can see a login button\n  if (props.authenticated) {\n    logoutButton = <Button onClick={logout} color=\"inherit\">Logout</Button>\n  } else {\n    loginButton = <Button onClick={login} color=\"inherit\">Login</Button>\n    // registerButton = <Button onClick={register} color=\"inherit\">Register</Button>\n  }\n\n  // const pages = ['Home', 'Sales'];\n\n  return (\n    <div>\n\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              Sales\n            </Typography>\n            <Button onClick={home} color=\"inherit\">Home</Button>\n            <Button onClick={sales} color=\"inherit\">Sales</Button>\n            {/* <Button onClick={login} color=\"inherit\">Login</Button>\n            <Button onClick={register} color=\"inherit\">Register</Button> */}\n            {/* <Link to=\"/\">Home</Link> |\n            <Link to=\"sales\"> Sales</Link> */}\n            {/* The below buttons will show depending on the authenication state */}\n            {loginButton}\n            {/* {registerButton} */}\n            {logoutButton}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import { useState } from 'react'\r\nimport axios from \"axios\";\r\nimport { TextField, Button, CardHeader, Card, Container } from '@mui/material'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n\r\n  //This conts useState is used for a quick login, meaning the email and password fields are already filled out\r\n  // const[form, setForm] = useState({email: \"Testemail@email.com\", password: \"password\"})\r\n  const[form, setForm] = useState({})\r\n\r\n  let navigate = useNavigate()\r\n\r\n  // const [loaded, setLoaded] = useState(false);\r\n\r\n    const handleForm = e => {\r\n\r\n      setForm(prevState => ({\r\n        ...prevState,\r\n        [e.target.name] : e.target.value\r\n      }))\r\n  \r\n      console.log(form)\r\n    }\r\n  \r\n    const submitForm = () => {\r\n      console.log(form)\r\n  \r\n      //When the submit button is clicked the email and password fields that are filled are used as part of the post request for users login of the sales DB\r\n      axios.post('https://sales-api-app.herokuapp.com/users/login', {\r\n        email: form.email,\r\n        password: form.password\r\n      })\r\n            .then(response => {\r\n              console.log(response.data.auth_token)\r\n              //A new auth_token is given to the user\r\n              props.onAuthenticated(true, response.data.auth_token)\r\n              // setLoaded((prev) => !prev);\r\n              //Then the navigate is used to redirct the user to the home page\r\n              navigate('/')\r\n            })\r\n            //If there is an error it, the error will be caught and displayed in the console\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {/* <Slide direction=\"up\" in={loaded} mountOnEnter unmountOnExit> */}\r\n        {/* The sale form is contained in a card and container div */}\r\n          <Card sx={{ maxWidth: 250 }}\r\n            style={{\r\n              backgroundColor: '#e7f6fa'\r\n            }}>\r\n            <Container maxWidth=\"sm\">\r\n              <CardHeader title=\"Login\"/>\r\n                <div className=\"form-group\">\r\n                  <TextField label=\"Email\" type=\"email\" variant=\"outlined\" name=\"email\" onChange={handleForm} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <TextField label=\"Password\" type=\"password\" variant=\"outlined\" name=\"password\" onChange={handleForm} />\r\n                </div>\r\n                <Button onClick={submitForm} style={{float: 'right'}} variant=\"contained\">Login</Button>\r\n            </Container>\r\n          </Card>\r\n        {/* </Slide> */}\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default LoginForm","import { useState } from 'react'\r\nimport axios from \"axios\";\r\nimport { TextField, Button, CardHeader, Card, Container} from '@mui/material'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst RegisterForm = (props) => {\r\n// const RegisterForm = () => {\r\n\r\n//Similar to the LoginForm.js page, this useState is used for a quick register\r\n  // const[form, setForm] = useState({ name: \"9Testt Name\", email: \"9registerTestEmail@email.com\", password: \"password\"})\r\n  const[form, setForm] = useState({})\r\n\r\n  let navigate = useNavigate()\r\n\r\n    const handleForm = e => {\r\n\r\n      setForm(prevState => ({\r\n        ...prevState,\r\n        [e.target.name] : e.target.value\r\n      }))\r\n  \r\n      console.log(form)\r\n    }\r\n  \r\n    const submitForm = () => {\r\n      console.log(form)\r\n  \r\n      //Again, like the Login submit button, when clicked the register form is used for the post request of user register and a new user is created with a auth_token\r\n      axios.post('https://sales-api-app.herokuapp.com/users/register', {\r\n        name: form.name,\r\n        email: form.email,\r\n        password: form.password\r\n      })\r\n        .then(response => {\r\n          console.log(response.data.auth_token)\r\n          // props.onAuthenticated(true, response.data.auth_token)\r\n            })\r\n        .catch(err => console.log(err))\r\n        //After the register is completed the email and password info from the new user is token and used for the post request of login to login the user into the site\r\n      axios.post('https://sales-api-app.herokuapp.com/users/login', {\r\n        email: form.email,\r\n        password: form.password\r\n      })\r\n        .then(response => {\r\n          // console.log(response.data.auth_token)\r\n          props.onAuthenticated(true, response.data.auth_token)\r\n          navigate('/')\r\n        })\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Card sx={{ maxWidth: 250 }}\r\n        style={{\r\n          backgroundColor: '#e7f6fa'\r\n        }}>\r\n          <Container maxWidth=\"sm\">\r\n            <CardHeader title=\"Register\"/>\r\n            <div className=\"form-group\">\r\n              <TextField label=\"Email\" type=\"email\" variant=\"outlined\" name=\"email\" onChange={handleForm} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <TextField label=\"Name\" variant=\"outlined\" name=\"name\" onChange={handleForm} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <TextField label=\"Password\" type=\"password\" variant=\"outlined\" name=\"password\" onChange={handleForm} />\r\n            </div>\r\n            <Button onClick={submitForm} style={{float: 'center'}} variant=\"contained\">Register</Button>\r\n          </Container>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default RegisterForm","import LoginForm from \"../components/LoginForm\"\nimport RegisterForm from \"../components/RegisterForm\"\nimport { Container, Grid } from '@mui/material'\n\nconst Home = props => {\n\n  return (\n    <Container maxWidth=\"sm\">\n      <div>\n        <h2>Home</h2>\n\n        <p>This is a site for sales, that contain the date of sale, store location, items purchased and other details, and details of the customer and their satifaction</p>\n        <br/>\n        {/* If the user is not logged in they can see these cards on the home page */}\n        <Grid container spacing={2}>\n          <Grid xs={6}>\n            {!props.authenticated ? <LoginForm onAuthenticated={props.onAuthenticated} /> : \"\"}\n          </Grid>\n          <Grid xs={6}>\n            {!props.authenticated ? <RegisterForm onAuthenticated={props.onAuthenticated} /> : \"\"}\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n  )\n}\n\nexport default Home","import LoginForm from \"../components/LoginForm\"\nimport { Container } from '@mui/material'\n\nconst Login = props => {\n\n  return (\n    <Container maxWidth=\"sm\">\n      <div>\n\n        {!props.authenticated ? <LoginForm onAuthenticated={props.onAuthenticated} /> : \"\"}\n\n      </div>\n    </Container>\n  )\n}\n\nexport default Login","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Button, Container, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Grow } from '@mui/material';\r\n\r\nconst Index = () => {\r\n  const [sales, setSales] = useState(null);\r\n\r\n  let navigate = useNavigate()\r\n  \r\n  //This useState is used for a transition\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  // const [page, setPage] = useState(0);\r\n  // const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  \r\n  // const handleChangePage = (event, newPage) => {\r\n  //   setPage(newPage);\r\n  // };\r\n  \r\n  // const handleChangeRowsPerPage = (event) => {\r\n  //   setRowsPerPage(+event.target.value);\r\n  //   setPage(0);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    //A get request is sent to the sales db to retrieve all sales data when the page is loaded\r\n    axios\r\n      .get(\"https://sales-api-app.herokuapp.com/sales\")\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setSales(response.data.sales);\r\n        //The setLoaded is called when the page is is opened\r\n        setLoaded((prev) => !prev);\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Error: ${error}`);\r\n      });\r\n  }, []);\r\n\r\n  //used for onClick, redircts to the create page\r\n  const create = () => {\r\n    navigate('create')\r\n  }\r\n\r\n  //If there is no sales doesnt return anything\r\n  if (!sales) return null;\r\n\r\n  //A salesList is created that loops through all the sales from the DB\r\n  const salesList = sales.map((sale) => {\r\n    \r\n    const view = () => {\r\n    navigate(`/sales/${sale._id}`)\r\n\r\n  }\r\n    return (\r\n      <div key={sale._id}>\r\n        <p><b>Sale Date:</b> <Link to={`/sales/${sale._id}`}>{sale.saleDate}</Link></p>\r\n        <p><b>Store Location:</b> {sale.storeLocation}</p>\r\n        <p><b>Purchase Method:</b> {sale.purchaseMethod}</p>\r\n        <Button onClick={view} variant=\"outlined\">View</Button>\r\n        <hr />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  // const rows = [\r\n  //   {salesList},\r\n  // ];\r\n\r\n  // const columns = [\r\n  //   { id: 'saleDate', label: 'Date', minWidth: 170 },\r\n  //   { id: 'storeLocation', label: 'Store Location', minWidth: 100 },\r\n  //   { id: 'purchaseMethod', label: 'Purchase Method', minWidth: 100 },\r\n  // ];\r\n\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"fixed\">\r\n        <h2> Sales </h2>\r\n        <p>This is the sales index page</p>\r\n        <Button onClick={create} variant=\"outlined\">Create</Button>\r\n        {/* Grow is a transistion, when the page is loaded the sale table will grow and display the sale data */}\r\n        <Grow\r\n          in={loaded}\r\n          style={{ transformOrigin: '0 0 0' }}\r\n          {...(loaded ? { timeout: 1000 } : {})}\r\n        >\r\n          <Paper sx={{ width: '100%', overflow: 'hidden' }}\r\n            style={{\r\n              backgroundColor: '#e7f6fa'\r\n            }}\r\n          >\r\n            <TableContainer sx={{ maxHeight: 440 }}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead \r\n                style={{\r\n                    backgroundColor: '#abd1e6'\r\n                  }}>\r\n                  <TableRow>\r\n                   <TableCell>Sale Info</TableCell>\r\n                    {/*<TableCell align=\"right\">Store Location</TableCell>*/}\r\n                   {/* <TableCell >Actions</TableCell>  */}\r\n                    {/* {columns.map((column) => ( */}\r\n                      {/* <TableCell\r\n                          // key={column.id}\r\n                          // align={column.align}\r\n                          // style={{ minWidth: column.minWidth }}\r\n                        >\r\n                          {/* {salesList} */}\r\n                      {/* </TableCell> \r\n                    ))} */}\r\n                  </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {/* Tried to create a show more rows, due to backend only the first 20 from the DB will show */}\r\n                {/* {rows\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === 'number'\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })} */}\r\n\r\n                  {/* {salesList} */}\r\n\r\n                  <TableCell>{salesList}</TableCell>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            {/* <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            /> */}\r\n          </Paper>\r\n        </Grow>\r\n\r\n        {/* <h2> Sales </h2>\r\n        <p>This is the sales index page</p>\r\n        <Button onClick={create} variant=\"outlined\">Create</Button>\r\n        {salesList} */}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import { useParams, useNavigate } from 'react-router-dom'\r\n// import axios from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n// import { Link } from 'react-router-dom';\r\nimport { Typography, Collapse, IconButton, CardActions, CardContent, CardMedia, CardHeader, Card, Container, Grid, Button, Slide } from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { styled } from '@mui/material/styles';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nconst Show = () => {\r\n\r\n    let {_id} = useParams()\r\n    let navigate = useNavigate()\r\n    const [sale, setSale] = useState(null)\r\n\r\n    let token = localStorage.getItem(\"auth_token\")\r\n\r\n    //expandMore is used within a card, when its clicked a transistion is made and the card displays more info of sales\r\n    const ExpandMore = styled((props) => {\r\n      const { expand, ...other } = props;\r\n      return <IconButton {...other} />;\r\n    })(({ theme, expand }) => ({\r\n      transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    }));\r\n\r\n      //expanded is created for a usestate\r\n      const [expanded, setExpanded] = useState(false);\r\n    \r\n      const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n      };\r\n\r\n      const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n      //When the page loads a get request is sent to sales DB to get a sale by the _id of the one the user clicked to view\r\n        axios\r\n          .get(`https://sales-api-app.herokuapp.com/sales/${_id}`, {\r\n              // headers: {\r\n              //     \"Authorization\": `Bearer ${token}`\r\n              // }\r\n          })\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            setSale(response.data.sale);\r\n            setLoaded((prev) => !prev);\r\n          })\r\n          .catch((err) => {\r\n            console.log(`Error: ${err}`);\r\n          });\r\n      // }, [_id, token])\r\n       }, [_id])\r\n\r\n      if (!sale) return null;\r\n\r\n      //Item is a loop that gets all the items info\r\n      const Item = (props) => {\r\n        //tagList is looped to get all the tags for one item in the array\r\n       const tagList = props.item.tags.map(tag => (\r\n          <p><b>Tags: </b>{tag}</p>\r\n        ))\r\n\r\n        return (\r\n          <>\r\n          <Container maxWidth=\"sm\">\r\n            {/* Tried adding grid layout to all the items */}\r\n            <Grid container spacing={3}>\r\n              <Grid xs={4}>\r\n                <p><b>Item: </b>{props.item.name}</p>\r\n                {tagList}\r\n                <p><b>Price: </b>€{props.item.price.$numberDecimal}</p>\r\n                <p><b>Quantity: </b>{props.item.quantity}</p>\r\n                <br/>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n          </>\r\n        )\r\n\r\n      }\r\n\r\n      //itemsList loops all the sale items, gets the above code from item and places it within the itemList\r\n      const itemsList = sale.items.map(item => (\r\n        <Item key={item.name} item={item} />\r\n      ))\r\n\r\n      const edit = () => {\r\n        navigate('edit')\r\n      }\r\n\r\n      //When the delete button is clicked a delete request is sent to the sales DB and the user is redircted to the sales idex page\r\n      const onDelete = () => {\r\n        axios\r\n          .delete(`https://sales-api-app.herokuapp.com/sales/delete/${_id}`, {\r\n              headers: {\r\n                  \"Authorization\": `Bearer ${token}`\r\n              }\r\n          })\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            navigate(`/sales`)\r\n          })\r\n          .catch((err) => {\r\n            console.log(`Error: ${err}`);\r\n          });\r\n      }\r\n  \r\n    return (\r\n      <div>\r\n        {/* The sale info is contained inside a card, which has an expand for more */}\r\n        <Container maxWidth=\"sm\">\r\n          {/* The slide transistion is used when the page is loaded the card slides onto the page */}\r\n          <Slide direction=\"up\" in={loaded} mountOnEnter unmountOnExit>\r\n            <Card sx={{ maxWidth: 635 }}\r\n              style={{\r\n                backgroundColor: '#e7f6fa'\r\n              }}>\r\n              <Container maxWidth=\"sm\">\r\n                <CardHeader title=\"Sale & Customer Info\"/>\r\n                  <Button onClick={edit} variant=\"contained\">Edit</Button>\r\n                  <Button onClick={() => onDelete(sale._id)} variant=\"contained\" color=\"error\" startIcon={<DeleteIcon />}>Delete</Button>\r\n                  {/* The grid is used to space the info out in the card */}\r\n                <Grid container spacing={2}>\r\n                  <Grid xs={6}>\r\n                    <CardContent>\r\n                      <Typography paragraph>\r\n                        <b>Sale Date:</b> {sale.saleDate}\r\n                      </Typography>\r\n                      <Typography paragraph>\r\n                        <b>Store Location:</b> {sale.storeLocation}\r\n                      </Typography>\r\n                      {/* <Typography paragraph>\r\n                        <b>Coupon Used:</b> {sale.couponUsed}\r\n                      </Typography> */}\r\n                      <Typography paragraph>\r\n                        <b>Purchase Method:</b> {sale.purchaseMethod}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Grid>\r\n                <Grid xs={6}>\r\n                  <CardContent>\r\n                    <Typography paragraph>\r\n                      <b>Customer Email:</b> {sale.customer.email}\r\n                    </Typography>\r\n                    <Typography paragraph>\r\n                      <b>Customer Gender:</b> {sale.customer.gender}\r\n                    </Typography>\r\n                    <Typography paragraph>\r\n                      <b>Customer Age:</b> {sale.customer.age}\r\n                    </Typography>\r\n                    <Typography>\r\n                      <b>Customer Satisfaction:</b> {sale.customer.satisfaction}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Grid>\r\n              </Grid>\r\n              {/* When the view more is clicked, the card expands to show the items array info */}\r\n                <CardActions disableSpacing>\r\n                  <Typography paragraph>\r\n                    <b>View Items Info</b>\r\n                  </Typography>\r\n                  <ExpandMore\r\n                    expand={expanded}\r\n                    onClick={handleExpandClick}\r\n                    aria-expanded={expanded}\r\n                    aria-label=\"show more\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </ExpandMore>\r\n                </CardActions>\r\n                  <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                      <Typography paragraph>\r\n                        <b>Item Info:</b>\r\n                      </Typography>\r\n                        <Typography paragraph>\r\n                          {itemsList}\r\n                        </Typography>\r\n                    </CardContent>\r\n                  </Collapse>\r\n                </Container>\r\n            </Card>\r\n          </Slide>\r\n        </Container>\r\n        {/* <h2>This is the sale show page {_id} </h2> */}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Show","import { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { TextField, MenuItem, FormControl, Select, InputLabel, Checkbox, FormControlLabel, FormLabel, FormGroup, Button, Container, Grid } from '@mui/material'\r\nimport {useNavigate} from \"react-router-dom\";\r\n// import { AdapterMoment, LocalizationProvider, DateTimePicker} from '@mui/lab'\r\n\r\n// const Item = () => {\r\n\r\n//   return (\r\n//     <>\r\n//     This sgould be a form \r\n//     </>\r\n//   )\r\n// }\r\n\r\nconst Create = () => {\r\n\r\n  const[form, setForm] = useState({})\r\n  // const[items, setItems] = useState([])\r\n\r\n  let navigate = useNavigate()\r\n\r\n  //This const state is used for the checkboxes of tags in items, making them false makes sure none are checked when the page is loaded\r\n    const [state, setState] = useState({\r\n      electronics: false,\r\n      school: false,\r\n      office: false,\r\n      stationary: false,\r\n      general: false,\r\n      organization: false,\r\n      writing: false,\r\n      travel: false,\r\n      kids: false,\r\n    });\r\n\r\n    // price[\"$numberDecimal\"]\r\n\r\n    const { electronics, school, office, stationary, general, organization, writing, travel, kids } = state;\r\n\r\n    const handleForm = e => {\r\n\r\n      setForm(prevState => ({\r\n        ...prevState,\r\n        [e.target.name] : e.target.value\r\n      }))\r\n\r\n      setState({\r\n        ...state,\r\n        [e.target.name]: e.target.checked,\r\n      })\r\n  \r\n      console.log(form)\r\n    }\r\n\r\n    const submitForm = () => {\r\n      console.log(form)\r\n\r\n      let token = localStorage.getItem(\"auth_token\")\r\n  \r\n      axios.post('https://sales-api-app.herokuapp.com/sales/', form, {\r\n        //The headers is used to make sure the user has authorization and checks to see if they have a suitable auth_token\r\n        headers: {\r\n          \"Authorization\": `Bearer ${token}`\r\n      }\r\n      })\r\n            .then(response => {\r\n              console.log(response.data)\r\n              //After the submit button is clicked the user is redircted to the sales index page\r\n              navigate(`/sales`)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        {/* There is an error with the create, the fields for customer are contained in an object within sales and items is an array, when the create is submitted \r\n        the customer info and item fields do not get created into these areas, instead out side of the area along side saleDate and storeLocation. The only way to\r\n        observe the newly created sale is to view it in an api consumer like postman or insomia */}\r\n        <Container maxWidth=\"sm\">\r\n          <h2>Create</h2>\r\n          <h4>Sale Info:</h4>\r\n            <Grid container spacing={2}>\r\n              <Grid xs={6}>\r\n                <div className=\"form-group\">\r\n                  <TextField\r\n                    id=\"datetime-local\"\r\n                    label=\"Sale Date\"\r\n                    type=\"datetime-local\"\r\n                    variant=\"filled\"\r\n                    name=\"saleDate\"\r\n                    onChange={handleForm}\r\n                    // defaultValue=\"2017-05-24T10:30\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Grid>\r\n              <Grid xs={6}>\r\n                <div className=\"form-group\">\r\n                  <FormControl variant=\"filled\" fullWidth>\r\n                    <InputLabel id=\"purchase-select-label\">Purchase Method</InputLabel>\r\n                      <Select labelId=\"purchase-select-label\" onChange={handleForm} label=\"Purchase Method\" name=\"purchaseMethod\" >\r\n                        <MenuItem value=\"In store\">In Store</MenuItem>\r\n                        <MenuItem value=\"Online\">Online</MenuItem>\r\n                      </Select>\r\n                  </FormControl>\r\n                </div>\r\n              </Grid>\r\n              <Grid xs={12}>\r\n              <div className=\"form-group\">\r\n                  <FormControl variant=\"filled\" fullWidth>\r\n                    <InputLabel id=\"store-location-select-label\">Store Location</InputLabel>\r\n                    <Select labelId=\"store-location-select-label\" onChange={handleForm} label=\"Store Location\" name=\"storeLocation\">\r\n                      <MenuItem value=\"Dublin\">Dublin</MenuItem>\r\n                      <MenuItem value=\"Cork\">Cork</MenuItem>\r\n                      <MenuItem value=\"Galway\">Galway</MenuItem>\r\n                      <MenuItem value=\"Mayo\">Mayo</MenuItem>\r\n                      <MenuItem value=\"Wexford\">Wexford</MenuItem>\r\n                      <MenuItem value=\"Austin\">Austin</MenuItem>\r\n                      <MenuItem value=\"Denver\">Denver</MenuItem>\r\n                      <MenuItem value=\"New York\">New York</MenuItem>\r\n                      <MenuItem value=\"Seattle\">Seattle</MenuItem>\r\n                      <MenuItem value=\"San Diego\">San Diego</MenuItem>\r\n                      <MenuItem value=\"London\">London</MenuItem>\r\n                      <MenuItem value=\"Liverpool\">Liverpool</MenuItem>\r\n                      <MenuItem value=\"Manchester\">Manchester</MenuItem>\r\n                      <MenuItem value=\"Berlin\">Berlin</MenuItem>\r\n                      <MenuItem value=\"Munich\">Munich</MenuItem>\r\n                      <MenuItem value=\"Paris\">Paris</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n                {/* <br/> */}\r\n              </Grid>\r\n            </Grid>\r\n            <h4>Customer Info:</h4>\r\n            <br/>\r\n            <Grid container spacing={2}>\r\n              <Grid xs={6}>\r\n                <div className=\"form-group\">\r\n                  <TextField label=\"Customer Email\" variant=\"filled\" name=\"email\" onChange={handleForm} />\r\n                </div>\r\n              </Grid>\r\n              <Grid xs={6}>\r\n                <div className=\"form-group\">\r\n                  <TextField label=\"Customer Age\" variant=\"filled\" name=\"age\" onChange={handleForm} />\r\n                </div>\r\n              </Grid>\r\n              <Grid xs={6}>\r\n                <div className=\"form-group\">\r\n                  <FormControl variant=\"filled\" fullWidth>\r\n                    <InputLabel id=\"gender-select-label\">Customer Gender</InputLabel>\r\n                      <Select labelId=\"gender-select-label\" onChange={handleForm} label=\"gender\" name=\"gender\" >\r\n                        <MenuItem value=\"M\">Male</MenuItem>\r\n                        <MenuItem value=\"F\">Female</MenuItem>\r\n                        <MenuItem value=\"O\">Other</MenuItem>\r\n                      </Select>\r\n                  </FormControl>\r\n                </div>\r\n              </Grid>\r\n              <Grid xs={6}>\r\n                <div className=\"form-group\">\r\n                  <FormControl variant=\"filled\" fullWidth>\r\n                    <InputLabel id=\"satisfaction-select-label\">Customer Satisfaction (1-5)</InputLabel>\r\n                      <Select labelId=\"satisfaction-select-label\" onChange={handleForm} label=\"Satisfaction\" name=\"satisfaction\" >\r\n                        <MenuItem value=\"1\">1</MenuItem>\r\n                        <MenuItem value=\"2\">2</MenuItem>\r\n                        <MenuItem value=\"3\">3</MenuItem>\r\n                        <MenuItem value=\"4\">4</MenuItem>\r\n                        <MenuItem value=\"5\">5</MenuItem>\r\n                      </Select>\r\n                  </FormControl>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <h4>Item Info:</h4>\r\n            <br/>\r\n            <Grid container spacing={3}>\r\n              <Grid xs={4}>\r\n                <div className=\"form-group\">\r\n                  <TextField label=\"Item Name\" variant=\"filled\" name=\"name\" onChange={handleForm} />\r\n                </div>\r\n              </Grid>\r\n              \r\n              <Grid xs={4}>\r\n                <div className=\"form-group\">\r\n                  <TextField label=\"Price\" variant=\"filled\" name=\"price[$numberDecimal]\" onChange={handleForm} />\r\n                </div>\r\n              </Grid>\r\n\r\n              <Grid xs={4}>\r\n                <div className=\"form-group\">\r\n                  <TextField label=\"Quantity\" variant=\"filled\" name=\"quantity\" onChange={handleForm} />\r\n                </div>\r\n              </Grid>\r\n              <Grid xs={12}>\r\n                <div className=\"form-group\">\r\n                  <FormControl variant=\"filled\" fullWidth>\r\n                    <FormLabel component=\"legend\">Tags</FormLabel>\r\n                      <FormGroup>\r\n                        <FormControlLabel control={<Checkbox checked={electronics} onChange={handleForm} name=\"electronics\" />} label=\"Electronics\" />\r\n                        <FormControlLabel control={ <Checkbox checked={school} onChange={handleForm} name=\"school\" /> } label=\"School\" />\r\n                        <FormControlLabel control={ <Checkbox checked={office} onChange={handleForm} name=\"office\" /> } label=\"Office\" />\r\n                        <FormControlLabel control={ <Checkbox checked={stationary} onChange={handleForm} name=\"stationary\" /> } label=\"Stationary\" />\r\n                        <FormControlLabel control={ <Checkbox checked={general} onChange={handleForm} name=\"general\" /> } label=\"General\" />\r\n                        <FormControlLabel control={ <Checkbox checked={organization} onChange={handleForm} name=\"organization\" /> } label=\"Organization\" />\r\n                        <FormControlLabel control={ <Checkbox checked={writing} onChange={handleForm} name=\"writing\" /> } label=\"Writing\" />\r\n                        <FormControlLabel control={ <Checkbox checked={travel} onChange={handleForm} name=\"travel\" /> } label=\"Travel\" />\r\n                        <FormControlLabel control={ <Checkbox checked={kids} onChange={handleForm} name=\"kids\" /> } label=\"Kids\" />\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                </div>\r\n                <br/>\r\n              </Grid>\r\n            </Grid>\r\n            <br/>\r\n        <Button onClick={submitForm} style={{float: 'right'}} variant=\"contained\">Submit</Button>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n  \r\n export default Create","import { useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport { TextField, MenuItem, FormControl, Select, InputLabel, Checkbox, FormControlLabel, FormLabel, FormGroup, Button, Container, Grid, CircularProgress } from '@mui/material'\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n// import { AdapterMoment, LocalizationProvider, DateTimePicker} from '@mui/lab'\r\nimport moment from 'moment'\r\n\r\nconst Edit = () => {\r\n\r\n  const[form, setForm] = useState({})\r\n  const [sale, setSales] = useState({})\r\n\r\n  const [state, setState] = useState({\r\n    electronics: false,\r\n    school: false,\r\n    office: false,\r\n    stationary: false,\r\n    general: false,\r\n    organization: false,\r\n    writing: false,\r\n    travel: false,\r\n    kids: false,\r\n  });\r\n\r\n  const { electronics, school, office, stationary, general, organization, writing, travel, kids } = state;\r\n\r\n  //useParams is used for declaring the _id so it can be used to get the info of the needed sale\r\n  let {_id} = useParams()\r\n  let navigate = useNavigate()\r\n\r\n  let token = localStorage.getItem(\"auth_token\")\r\n\r\n    useEffect(() => {\r\n        axios\r\n        //A get request is sent to retrieve the sale with the given _id of the sale that was clicked\r\n          .get(`https://sales-api-app.herokuapp.com/sales/${_id}`, {\r\n              headers: {\r\n                  \"Authorization\": `Bearer ${token}`\r\n              }\r\n          })\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            //The setSales gets the data/info of sale\r\n            setSales(response.data.sale);\r\n          })\r\n          .catch((err) => {\r\n            console.log(`Error: ${err}`);\r\n          });\r\n      }, [_id, token])\r\n\r\n      useEffect(()=> {\r\n        setForm({\r\n          //moment is used to format the saleDate to the desired format\r\n          saleDate: moment(sale.saleDate).format(\"yyyy-MM-DDThh:mm\"),\r\n          storeLocation: sale.storeLocation,\r\n          //When I have the set form as shown below in the compondents in the console in the gender field all customer info is shown, instead of just gender\r\n          gender: sale.customer,\r\n          //And when the below code is shown, the cusomter age is shown, but when the page is refreshed or if the user redircts to a differnt page, the site gets an error with age\r\n          // age: sale.customer.age,\r\n\r\n          // items: {\r\n          //   name: sale.items.name,\r\n          //   tags: sale.items.tags,\r\n          //   // price: {\r\n          //   //   [\"$numberDecimal\"]: sale.items.price.[\"$numberDecimal\"]\r\n          //   // },\r\n          //   quantity: sale.items.quantity\r\n          // },\r\n          // customer: {\r\n          //   gender: sale.customer,\r\n            // age: sale.customerage,\r\n            // email: sale.customer.email,\r\n            // satisfaction: sale.customer.satisfaction\r\n          // },\r\n          purchaseMethod: sale.purchaseMethod\r\n        })\r\n      }, [sale])\r\n\r\n      if (!sale) return null;\r\n\r\n    const handleForm = e => {\r\n\r\n      setForm(prevState => ({\r\n        ...prevState,\r\n        [e.target.name] : e.target.value\r\n      }))\r\n\r\n      setState({\r\n        ...state,\r\n        [e.target.name]: e.target.checked,\r\n      })\r\n  \r\n      console.log(form)\r\n    }\r\n\r\n    const submitForm = () => {\r\n      console.log(form)\r\n\r\n      let token = localStorage.getItem(\"auth_token\")\r\n  \r\n      axios.put(`https://sales-api-app.herokuapp.com/sales/${_id}`, form, {\r\n        headers: {\r\n          \"Authorization\": `Bearer ${token}`\r\n      }\r\n      })\r\n            .then(response => {\r\n              console.log(response.data)\r\n              //After the edit form has been submitted the site redircts to the view sale page of the one that was just editted\r\n              navigate(`/sales/${_id}`)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    //This const uses a circle loading symbol when the page is loaded\r\n    const Loading = () => {\r\n      return <div className=\"form-group\"><CircularProgress /></div>\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        {/* Edit has a few errors, including the one mentioned above with cusomter and item info not showing and given errors. Also when the edit form is submitted\r\n        in the console compondents area the useState changes when you make an edit, but on submit nothing changes due to an error with the backend. */}\r\n        <Container maxWidth=\"sm\">\r\n          <h2>Edit</h2>\r\n          <h4>Sale Info:</h4>\r\n            <Grid container spacing={2}>\r\n              <Grid xs={6}>\r\n                {\r\n                  form.saleDate ? (\r\n                    <div className=\"form-group\">\r\n                      <TextField\r\n                        id=\"datetime-local\"\r\n                        label=\"Sale Date\"\r\n                        type=\"datetime-local\"\r\n                        variant=\"filled\"\r\n                        name=\"saleDate\"\r\n                        onChange={handleForm}\r\n                        value={form.saleDate}\r\n                        // defaultValue=\"2017-05-24T10:30\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  ) : (<Loading />)\r\n                }\r\n              </Grid>\r\n              <Grid xs={6}>\r\n                {\r\n                  form.purchaseMethod ? (\r\n                    <div className=\"form-group\">\r\n                      <FormControl variant=\"filled\" fullWidth>\r\n                      <InputLabel id=\"store-location-select-label\">Store Location</InputLabel>\r\n                      <Select labelId=\"purchase-select-label\" onChange={handleForm} label=\"Purchase Method\" name=\"purchaseMethod\" value={form.purchaseMethod} >\r\n                        <MenuItem value=\"In store\">In Store</MenuItem>\r\n                        <MenuItem value=\"Online\">Online</MenuItem>\r\n                      </Select>\r\n                      </FormControl>\r\n                    </div>\r\n                  ) : (<Loading />)\r\n                }\r\n              </Grid>\r\n              <Grid xs={12}>\r\n                {\r\n                  form.storeLocation ? (\r\n                    <div className=\"form-group\">\r\n                      <FormControl variant=\"filled\" fullWidth>\r\n                      <InputLabel id=\"store-location-select-label\">Store Location</InputLabel>\r\n                      <Select labelId=\"store-location-select-label\" onChange={handleForm} label=\"Store Location\" name=\"storeLocation\" value={form.storeLocation} >\r\n                        <MenuItem value=\"Dublin\">Dublin</MenuItem>\r\n                        <MenuItem value=\"Cork\">Cork</MenuItem>\r\n                        <MenuItem value=\"Galway\">Galway</MenuItem>\r\n                        <MenuItem value=\"Mayo\">Mayo</MenuItem>\r\n                        <MenuItem value=\"Wexford\">Wexford</MenuItem>\r\n                        <MenuItem value=\"Austin\">Austin</MenuItem>\r\n                        <MenuItem value=\"Denver\">Denver</MenuItem>\r\n                        <MenuItem value=\"New York\">New York</MenuItem>\r\n                        <MenuItem value=\"Seattle\">Seattle</MenuItem>\r\n                        <MenuItem value=\"San Diego\">San Diego</MenuItem>\r\n                        <MenuItem value=\"London\">London</MenuItem>\r\n                        <MenuItem value=\"Liverpool\">Liverpool</MenuItem>\r\n                        <MenuItem value=\"Manchester\">Manchester</MenuItem>\r\n                        <MenuItem value=\"Berlin\">Berlin</MenuItem>\r\n                        <MenuItem value=\"Munich\">Munich</MenuItem>\r\n                        <MenuItem value=\"Paris\">Paris</MenuItem>\r\n                      </Select>\r\n                      </FormControl>\r\n                    </div>\r\n                  ) : (<Loading />)\r\n                }\r\n              </Grid>\r\n            </Grid>\r\n\r\n          {/* {\r\n            form.sale.items.name ? (\r\n              <div className=\"form-group\">\r\n                <TextField label=\"Item Name\" variant=\"filled\" name=\"name\" onChange={handleForm} value={form.sale.items.name} />\r\n              </div>\r\n            ) : (<Loading />)\r\n          }\r\n\r\n          {\r\n            form.sale.items.tags ? (\r\n              <div className=\"form-group\">\r\n                <FormControl variant=\"filled\" fullWidth>\r\n                  <FormLabel component=\"legend\">Tags</FormLabel>\r\n                    <FormGroup>\r\n                      <FormControlLabel control={<Checkbox checked={electronics} onChange={handleForm} name=\"electronics\" />} label=\"Electronics\" value={form.sale.items.tags} />\r\n                      <FormControlLabel control={ <Checkbox checked={school} onChange={handleForm} name=\"school\" /> } label=\"School\" value={form.sale.items.tags} />\r\n                      <FormControlLabel control={ <Checkbox checked={office} onChange={handleForm} name=\"office\" /> } label=\"Office\" value={form.sale.items.tags} />\r\n                      <FormControlLabel control={ <Checkbox checked={stationary} onChange={handleForm} name=\"stationary\" /> } label=\"Stationary\" value={form.sale.items.tags} />\r\n                      <FormControlLabel control={ <Checkbox checked={general} onChange={handleForm} name=\"general\" /> } label=\"General\" value={form.sale.items.tags} />\r\n                      <FormControlLabel control={ <Checkbox checked={organization} onChange={handleForm} name=\"organization\" /> } label=\"Organization\" value={form.sale.items.tags} />\r\n                      <FormControlLabel control={ <Checkbox checked={writing} onChange={handleForm} name=\"writing\" /> } label=\"Writing\" value={form.sale.items.tags} />\r\n                      <FormControlLabel control={ <Checkbox checked={travel} onChange={handleForm} name=\"travel\" /> } label=\"Travel\" value={form.sale.items.tags} />\r\n                      <FormControlLabel control={ <Checkbox checked={kids} onChange={handleForm} name=\"kids\" /> } label=\"Kids\" value={form.sale.items.tags} />\r\n                    </FormGroup>\r\n                  </FormControl>\r\n              </div>\r\n            ) : (<Loading />)\r\n          }\r\n\r\n          {\r\n            form.sale.items.quantity ? (\r\n              <div className=\"form-group\">\r\n                <TextField label=\"Quantity\" variant=\"filled\" name=\"quantity\" onChange={handleForm} value={form.sale.items.quantity} />\r\n              </div>\r\n            ) : (<Loading />)\r\n          } \r\n\r\n          {\r\n            form.sale.items.price.[\"$numberDecimal\"] ? (\r\n              <div className=\"form-group\">\r\n                <TextField label=\"Price\" variant=\"filled\" name=[\"$numberDecimal\"] onChange={handleForm} value={form.sale.items.price.[\"$numberDecimal\"]} />\r\n              </div>\r\n            ) : (<Loading />)\r\n          }*/}\r\n\r\n          {\r\n            form.gender ? (\r\n              <div className=\"form-group\">\r\n                <FormControl variant=\"filled\" fullWidth>\r\n                  <InputLabel id=\"gender-select-label\">Customer Gender</InputLabel>\r\n                    <Select labelId=\"gender-select-label\" onChange={handleForm} label=\"gender\" name=\"gender\" value={form.gender} >\r\n                      <MenuItem value=\"M\">Male</MenuItem>\r\n                      <MenuItem value=\"F\">Female</MenuItem>\r\n                      <MenuItem value=\"O\">Other</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n              </div>\r\n            ) : (<Loading />)\r\n          }\r\n\r\n          {/* {\r\n            form.age ? (\r\n              <div className=\"form-group\">\r\n                <TextField label=\"Customer Age\" variant=\"filled\" name=\"age\" onChange={handleForm} value={form.age} />\r\n              </div>\r\n            ) : (<Loading />)\r\n          } */}\r\n{/*\r\n          {\r\n            form.sale.customer.email ? (\r\n              <div className=\"form-group\">\r\n                <TextField label=\"Customer Email\" variant=\"filled\" name=\"email\" onChange={handleForm} value={form.sale.customer.email} />\r\n              </div>\r\n              ) : (<Loading />)\r\n          }\r\n\r\n          {\r\n            form.sale.customer.satisfaction ? (\r\n              <div className=\"form-group\">\r\n                <FormControl variant=\"filled\" fullWidth>\r\n                  <InputLabel id=\"satisfaction-select-label\">Customer Satisfaction (1-5)</InputLabel>\r\n                    <Select labelId=\"satisfaction-select-label\" onChange={handleForm} label=\"Satisfaction\" name=\"satisfaction\" value={form.sale.customer.satisfaction} >\r\n                      <MenuItem value=\"1\">1</MenuItem>\r\n                      <MenuItem value=\"2\">2</MenuItem>\r\n                      <MenuItem value=\"3\">3</MenuItem>\r\n                      <MenuItem value=\"4\">4</MenuItem>\r\n                      <MenuItem value=\"5\">5</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n              </div>\r\n            ) : (<Loading />)\r\n          } */}\r\n\r\n          <Button onClick={submitForm} style={{float: 'right'}} variant=\"contained\">Submit</Button>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Edit","import { useLocation } from 'react-router-dom'\n\nconst PageNotFound = () => {\n\n  let location = useLocation();\n\n  console.log(location)\n\n  return (\n    <div>\n      <h2>Sorry, 404 the page {location.pathname} was not found</h2>\n    </div>\n  )\n}\n\nexport default PageNotFound","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { useState, useEffect } from 'react'\n//Components\nimport Navbar from \"./components/Navbar\";\n\n//PAGES\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\n// import Register from \"./pages/Register\";\nimport SalesIndex from \"./pages/sales/Index\";\nimport SalesShow from \"./pages/sales/Show\";\nimport SalesCreate from \"./pages/sales/Create\";\nimport SalesEdit from \"./pages/sales/Edit\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport NoPermission from \"./pages/NoPermission\";\n\nconst App = () => {\n  const [authenticated, setAuthenticated] = useState(false)\n\n  let protectedSales\n\n  useEffect(() => {\n    if(localStorage.getItem('auth_token')) {\n      setAuthenticated(true)\n    }\n  }, []);\n\n  const onAuthenticated = (auth, auth_token) => {\n    setAuthenticated(auth)\n    if (auth) {\n      localStorage.setItem('auth_token', auth_token)\n    } \n    else {\n      localStorage.removeItem('auth_token')\n    }\n  }\n\n  //If the user is authenicated, meaning logined they can see the website pages within this If statement\n    if(authenticated) {\n      protectedSales = (\n        <>\n        <Route path=\"/sales/create\" element={<SalesCreate />} />\n        <Route path=\"/sales/:_id/edit\" element={<SalesEdit />} />\n        {/* <Route path=\"/sales/:_id\" element={<SalesShow />} /> */}\n        </>\n        \n      )\n    }\n    //Tried adding a page for when you arnt logged in a no permission page would show, did not work\n    else {\n      <Route element={<NoPermission />} />\n    }\n\n  return (\n    <Router>\n      <Navbar onAuthenticated={onAuthenticated} authenticated={authenticated} />\n      <Routes>\n        <Route path=\"/\" element={<Home onAuthenticated={onAuthenticated} authenticated={authenticated} />} />\n        <Route path=\"/login\" element={<Login onAuthenticated={onAuthenticated} authenticated={authenticated} />} />\n        {/* <Route path=\"/register\" element={<Register onAuthenticated={onAuthenticated} authenticated={authenticated} />} /> */}\n        {/* <Route path=\"/login\" element={<Login />}  />\n        <Route path=\"/register\" element={<Register />} /> */}\n        <Route path=\"/sales\" element={<SalesIndex />} />\n        <Route path=\"/sales/:_id\" element={<SalesShow />} />\n        {protectedSales}\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}